{"version":3,"file":"Link.jsx","sourceRoot":"","sources":["Link.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAY1B,IAAM,IAAI,GAAwB,UAAC,EASlC;IARC,IAAA,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,eAAmB,EAAnB,OAAO,mBAAG,SAAS,KAAA,EACnB,iBAAc,EAAd,SAAS,mBAAG,EAAE,KAAA,EACd,MAAM,YAAA,EACN,GAAG,SAAA,EACH,OAAO,aAAA,EACJ,KAAK,cARyB,wEASlC,CADS;IAER,IAAM,UAAU,GAAG,6CAA6C,CAAC;IACjE,IAAM,aAAa,GAAG;QACpB,OAAO,EAAE,6CAA6C;QACtD,OAAO,EAAE,+DAA+D;QACxE,SAAS,EAAE,gEAAgE;KAC5E,CAAC;IAEF,IAAM,iBAAiB,GAAG,UAAG,UAAU,cAAI,aAAa,CAAC,OAAO,CAAC,cAAI,SAAS,CAAE,CAAC,IAAI,EAAE,CAAC;IAExF,IAAM,WAAW,GAAG,UAAC,KAA0C;QAC7D,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAG,KAAK,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,CAAC,CACA,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,SAAS,CAAC,CAAC,iBAAiB,CAAC,CAC7B,MAAM,CAAC,CAAC,MAAM,CAAC,CACf,GAAG,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC,CACvD,OAAO,CAAC,CAAC,WAAW,CAAC,CACrB,IAAI,KAAK,CAAC,CAEV;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,CAAC,CAAC,CACL,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC","sourcesContent":["import React from 'react';\n\nexport interface LinkProps {\n  href: string;\n  children: React.ReactNode;\n  variant?: 'default' | 'primary' | 'secondary';\n  className?: string;\n  target?: '_blank' | '_self' | '_parent' | '_top';\n  rel?: string;\n  onClick?: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n}\n\nconst Link: React.FC<LinkProps> = ({\n  href,\n  children,\n  variant = 'default',\n  className = '',\n  target,\n  rel,\n  onClick,\n  ...props\n}) => {\n  const baseStyles = 'inline-block transition-colors duration-200';\n  const variantStyles = {\n    default: 'text-blue-600 hover:text-blue-800 underline',\n    primary: 'text-primary-600 hover:text-primary-800 font-medium underline',\n    secondary: 'text-gray-600 hover:text-gray-800 no-underline hover:underline'\n  };\n\n  const combinedClassName = `${baseStyles} ${variantStyles[variant]} ${className}`.trim();\n\n  const handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    onClick?.(event);\n  };\n\n  return (\n    <a\n      href={href}\n      className={combinedClassName}\n      target={target}\n      rel={target === '_blank' ? 'noopener noreferrer' : rel}\n      onClick={handleClick}\n      {...props}\n    >\n      {children}\n    </a>\n  );\n};\n\nexport default Link; "]}